# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-04 11:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:2
msgid "Registering an Environment"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:6
msgid "In the previous tutorial, we learned how to create a custom cartpole environment. We manually created an instance of the environment by importing the environment class and its configuration class."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:0
msgid "Environment creation in the previous tutorial"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:18
msgid "While straightforward, this approach is not scalable as we have a large suite of environments. In this tutorial, we will show how to use the :meth:`gymnasium.register` method to register environments with the ``gymnasium`` registry. This allows us to create the environment through the :meth:`gymnasium.make` function."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:0
msgid "Environment creation in this tutorial"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:33
msgid "The Code"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:35
msgid "The tutorial corresponds to the ``random_agent.py`` script in the ``source/standalone/environments`` directory."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:0
msgid "Code for random_agent.py"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:47
msgid "The Code Explained"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:49
msgid "The :class:`envs.ManagerBasedRLEnv` class inherits from the :class:`gymnasium.Env` class to follow a standard interface. However, unlike the traditional Gym environments, the :class:`envs.ManagerBasedRLEnv` implements a *vectorized* environment. This means that multiple environment instances are running simultaneously in the same process, and all the data is returned in a batched fashion."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:55
msgid "Similarly, the :class:`envs.DirectRLEnv` class also inherits from the :class:`gymnasium.Env` class for the direct workflow."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:59
msgid "Using the gym registry"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:61
msgid "To register an environment, we use the :meth:`gymnasium.register` method. This method takes in the environment name, the entry point to the environment class, and the entry point to the environment configuration class."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:66
msgid "The :mod:`gymnasium` registry is a global registry. Hence, it is important to ensure that the environment names are unique. Otherwise, the registry will throw an error when registering the environment."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:71
msgid "Manager-Based Environments"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:73
msgid "For manager-based environments, the following shows the registration call for the cartpole environment in the ``omni.isaac.lab_tasks.manager_based.classic.cartpole`` sub-package:"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:81
msgid "The ``id`` argument is the name of the environment. As a convention, we name all the environments with the prefix ``Isaac-`` to make it easier to search for them in the registry. The name of the environment is typically followed by the name of the task, and then the name of the robot. For instance, for legged locomotion with ANYmal C on flat terrain, the environment is called ``Isaac-Velocity-Flat-Anymal-C-v0``. The version number ``v<N>`` is typically used to specify different variations of the same environment. Otherwise, the names of the environments can become too long and difficult to read."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:89
msgid "The ``entry_point`` argument is the entry point to the environment class. The entry point is a string of the form ``<module>:<class>``. In the case of the cartpole environment, the entry point is ``omni.isaac.lab.envs:ManagerBasedRLEnv``. The entry point is used to import the environment class when creating the environment instance."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:94
msgid "The ``env_cfg_entry_point`` argument specifies the default configuration for the environment. The default configuration is loaded using the :meth:`omni.isaac.lab_tasks.utils.parse_env_cfg` function. It is then passed to the :meth:`gymnasium.make` function to create the environment instance. The configuration entry point can be both a YAML file or a python configuration class."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:100
msgid "Direct Environments"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:102
msgid "For direct-based environments, the environment registration follows a similar pattern. Instead of registering the environment's entry point as the :class:`~omni.isaac.lab.envs.ManagerBasedRLEnv` class, we register the environment's entry point as the implementation class of the environment. Additionally, we add the suffix ``-Direct`` to the environment name to differentiate it from the manager-based environments."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:108
msgid "As an example, the following shows the registration call for the cartpole environment in the ``omni.isaac.lab_tasks.direct.cartpole`` sub-package:"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:118
msgid "Creating the environment"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:120
msgid "To inform the ``gym`` registry with all the environments provided by the ``omni.isaac.lab_tasks`` extension, we must import the module at the start of the script. This will execute the ``__init__.py`` file which iterates over all the sub-packages and registers their respective environments."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:129
msgid "In this tutorial, the task name is read from the command line. The task name is used to parse the default configuration as well as to create the environment instance. In addition, other parsed command line arguments such as the number of environments, the simulation device, and whether to render, are used to override the default configuration."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:139
msgid "Once creating the environment, the rest of the execution follows the standard resetting and stepping."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:143
msgid "The Code Execution"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:145
msgid "Now that we have gone through the code, let's run the script and see the result:"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:152
msgid "This should open a stage with everything similar to the :ref:`tutorial-create-manager-rl-env` tutorial. To stop the simulation, you can either close the window, or press ``Ctrl+C`` in the terminal."
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:155
msgid "In addition, you can also change the simulation device from GPU to CPU by adding the ``--cpu`` flag:"
msgstr ""

#: ../../source/tutorials/03_envs/register_rl_env_gym.rst:161
msgid "With the ``--cpu`` flag, the simulation will run on the CPU. This is useful for debugging the simulation. However, the simulation will run much slower than on the GPU."
msgstr ""
