# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-04 11:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/how-to/save_camera_output.rst:5
msgid "Saving rendered images and 3D re-projection"
msgstr ""

#: ../../source/how-to/save_camera_output.rst:9
msgid "This guide accompanied with the ``run_usd_camera.py`` script in the ``IsaacLab/source/standalone/tutorials/04_sensors`` directory."
msgstr ""

#: ../../source/how-to/save_camera_output.rst:0
msgid "Code for run_usd_camera.py"
msgstr ""

#: ../../source/how-to/save_camera_output.rst:22
msgid "Saving using Replicator Basic Writer"
msgstr ""

#: ../../source/how-to/save_camera_output.rst:24
msgid "To save camera outputs, we use the basic write class from Omniverse Replicator. This class allows us to save the images in a numpy format. For more information on the basic writer, please check the `documentation <https://docs.omniverse.nvidia.com/extensions/latest/ext_replicator/writer_examples.html>`_."
msgstr ""

#: ../../source/how-to/save_camera_output.rst:33
msgid "While stepping the simulator, the images can be saved to the defined folder. Since the BasicWriter only supports saving data using NumPy format, we first need to convert the PyTorch sensors to NumPy arrays before packing them in a dictionary."
msgstr ""

#: ../../source/how-to/save_camera_output.rst:42
msgid "After this step, we can save the images using the BasicWriter."
msgstr ""

#: ../../source/how-to/save_camera_output.rst:51
msgid "Projection into 3D Space"
msgstr ""

#: ../../source/how-to/save_camera_output.rst:53
msgid "We include utilities to project the depth image into 3D Space. The re-projection operations are done using PyTorch operations which allows faster computation."
msgstr ""

#: ../../source/how-to/save_camera_output.rst:67
msgid "Alternately, we can use the :meth:`omni.isaac.lab.sensors.camera.utils.create_pointcloud_from_depth` function to create a point cloud from the depth image and transform it to the world frame."
msgstr ""

#: ../../source/how-to/save_camera_output.rst:75
msgid "The resulting point cloud can be visualized using the :mod:`omni.isaac.debug_draw` extension from Isaac Sim. This makes it easy to visualize the point cloud in the 3D space."
msgstr ""

#: ../../source/how-to/save_camera_output.rst:85
msgid "Executing the script"
msgstr ""

#: ../../source/how-to/save_camera_output.rst:87
msgid "To run the accompanying script, execute the following command:"
msgstr ""

#: ../../source/how-to/save_camera_output.rst:98
msgid "The simulation should start, and you can observe different objects falling down. An output folder will be created in the ``IsaacLab/source/standalone/tutorials/04_sensors`` directory, where the images will be saved. Additionally, you should see the point cloud in the 3D space drawn on the viewport."
msgstr ""

#: ../../source/how-to/save_camera_output.rst:102
msgid "To stop the simulation, close the window, press the ``STOP`` button in the UI, or use ``Ctrl+C`` in the terminal."
msgstr ""
