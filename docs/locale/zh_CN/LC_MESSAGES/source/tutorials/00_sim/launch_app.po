# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-04 11:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/tutorials/00_sim/launch_app.rst:2
msgid "Deep-dive into AppLauncher"
msgstr "深度讨论AppLauncher"

#: ../../source/tutorials/00_sim/launch_app.rst:6
msgid ""
"In this tutorial, we will dive into the :class:`app.AppLauncher` class to "
"configure the simulator using CLI arguments and environment variables "
"(envars). Particularly, we will demonstrate how to use "
":class:`~app.AppLauncher` to enable livestreaming and configure the "
":class:`omni.isaac.kit.SimulationApp` instance it wraps, while also allowing"
" user-provided options."
msgstr ""
"在本教程中，我们将深入研究:class:`app.AppLauncher`类，以使用CLI参数和环境变量（envars）配置模拟器。特别地，我们将演示如何使用:class:`~app.AppLauncher`来启用实时流并配置其封装的:class:`omni.isaac.kit.SimulationApp`实例，同时允许用户提供的选项。"

#: ../../source/tutorials/00_sim/launch_app.rst:11
msgid ""
"The :class:`~app.AppLauncher` is a wrapper for "
":class:`~omni.isaac.kit.SimulationApp` to simplify its configuration. The "
":class:`~omni.isaac.kit.SimulationApp` has many extensions that must be "
"loaded to enable different capabilities, and some of these extensions are "
"order- and inter-dependent. Additionally, there are startup options such as "
"``headless`` which must be set at instantiation time, and which have an "
"implied relationship with some extensions, e.g. the livestreaming "
"extensions. The :class:`~app.AppLauncher` presents an interface that can "
"handle these extensions and startup options in a portable manner across a "
"variety of use cases. To achieve this, we offer CLI and envar flags which "
"can be merged with user-defined CLI args, while passing forward arguments "
"intended for :class:`~omni.isaac.kit.SimulationApp`."
msgstr ""
":class:`~app.AppLauncher`是:class:`~omni.isaac.kit.SimulationApp`的包装器，以简化其配置。:class:`~omni.isaac.kit.SimulationApp`有许多扩展，必须加载才能启用不同的功能，并且其中一些扩展是有顺序和相互依赖的。另外，还有一些启动选项，例如``headless``必须在实例化时设置，这些选项与一些扩展有隐含的关系，例如实时流扩展。:class:`~app.AppLauncher`提供了一个接口，可以以便于跨各种用例便携地处理这些扩展和启动选项。为了实现这一点，我们提供了可以与用户定义的CLI参数合并的CLI和envar标志，同时将用于:class:`~omni.isaac.kit.SimulationApp`的参数传递下去。"

#: ../../source/tutorials/00_sim/launch_app.rst:23
msgid "The Code"
msgstr "代码"

#: ../../source/tutorials/00_sim/launch_app.rst:25
msgid ""
"The tutorial corresponds to the ``launch_app.py`` script in the "
"``source/standalone/tutorials/00_sim`` directory."
msgstr "本教程对应于``source/standalone/tutorials/00_sim``目录中的``launch_app.py``脚本。"

#: ../../source/tutorials/00_sim/launch_app.rst
msgid "Code for launch_app.py"
msgstr "launch_app.py的代码"

#: ../../source/tutorials/00_sim/launch_app.rst:37
msgid "The Code Explained"
msgstr "代码解释"

#: ../../source/tutorials/00_sim/launch_app.rst:40
msgid "Adding arguments to the argparser"
msgstr "向argparser添加参数"

#: ../../source/tutorials/00_sim/launch_app.rst:42
msgid ""
":class:`~app.AppLauncher` is designed to be compatible with custom CLI args "
"that users need for their own scripts, while still providing a portable CLI "
"interface."
msgstr ":class:`~app.AppLauncher`设计为与用户自己脚本所需的自定义CLI参数兼容，同时提供一个便携的CLI接口。"

#: ../../source/tutorials/00_sim/launch_app.rst:45
msgid ""
"In this tutorial, a standard :class:`argparse.ArgumentParser` is "
"instantiated and given the script-specific ``--size`` argument, as well as "
"the arguments ``--height`` and ``--width``. The latter are ingested by "
":class:`~omni.isaac.kit.SimulationApp`."
msgstr ""
"在本教程中，我们使用标准的:class:`argparse.ArgumentParser`进行实例化，并给予特定于脚本的``--size``参数，以及``--height``和``--width``参数。后者由:class:`~omni.isaac.kit.SimulationApp`接受。"

#: ../../source/tutorials/00_sim/launch_app.rst:49
msgid ""
"The argument ``--size`` is not used by :class:`~app.AppLauncher`, but will "
"merge seamlessly with the :class:`~app.AppLauncher` interface. In-script "
"arguments can be merged with the :class:`~app.AppLauncher` interface via the"
" :meth:`~app.AppLauncher.add_app_launcher_args` method, which will return a "
"modified :class:`~argparse.ArgumentParser` with the "
":class:`~app.AppLauncher` arguments appended. This can then be processed "
"into an :class:`argparse.Namespace` using the standard "
":meth:`argparse.ArgumentParser.parse_args` method and passed directly to "
":class:`~app.AppLauncher` for instantiation."
msgstr ""
"参数``--size``不会被:class:`~app.AppLauncher`所使用，但它将无缝地与:class:`~app.AppLauncher`接口合并。可以通过:meth:`~app.AppLauncher.add_app_launcher_args`方法将脚本中的参数与:class:`~app.AppLauncher`接口合并，这将返回一个修改过的:class:`~argparse.ArgumentParser`，其中包含了:class:`~app.AppLauncher`参数。然后可以使用标准的:meth:`argparse.ArgumentParser.parse_args`方法将其处理为:class:`argparse.Namespace`，并直接传递给:class:`~app.AppLauncher`进行实例化。"

#: ../../source/tutorials/00_sim/launch_app.rst:62
msgid ""
"The above only illustrates only one of several ways of passing arguments to "
":class:`~app.AppLauncher`. Please consult its documentation page to see "
"further options."
msgstr "以上只是说明了一种向:class:`~app.AppLauncher`传递参数的方法，请参考其文档页面以查看更多选项。"

#: ../../source/tutorials/00_sim/launch_app.rst:66
msgid "Understanding the output of --help"
msgstr "了解--help输出"

#: ../../source/tutorials/00_sim/launch_app.rst:68
msgid ""
"While executing the script, we can pass the ``--help`` argument and see the "
"combined outputs of the custom arguments and those from "
":class:`~app.AppLauncher`."
msgstr "在执行脚本时，我们可以传递``--help``参数，并查看自定义参数以及来自:class:`~app.AppLauncher`的合并输出。"

#: ../../source/tutorials/00_sim/launch_app.rst:102
msgid ""
"This readout details the ``--size``, ``--height``, and ``--width`` arguments"
" defined in the script directly, as well as the :class:`~app.AppLauncher` "
"arguments."
msgstr ""
"这个输出详细说明了脚本直接定义的``--size``、``--height``和``--width``参数，以及:class:`~app.AppLauncher`参数。"

#: ../../source/tutorials/00_sim/launch_app.rst:105
msgid ""
"The ``[INFO]`` messages preceding the help output also reads out which of "
"these arguments are going to be interpreted as arguments to the "
":class:`~omni.isaac.kit.SimulationApp` instance which the "
":class:`~app.AppLauncher` class wraps. In this case, it is ``--height`` and "
"``--width``. These are classified as such because they match the name and "
"type of an argument which can be processed by "
":class:`~omni.isaac.kit.SimulationApp`. Please refer to the `specification`_"
" for such arguments for more examples."
msgstr ""
"在帮助输出之前的``[INFO]``消息中还列出了这些参数中哪些将被解释为:class:`~app.AppLauncher`类封装的:class:`~omni.isaac.kit.SimulationApp`实例的参数。在本例中，它是``--height``和``--width``。这些被归类为这样，是因为它们匹配:class:`~omni.isaac.kit.SimulationApp`可以处理的参数的名称和类型。有关这些参数的更多示例，请参考`specification`_。"

#: ../../source/tutorials/00_sim/launch_app.rst:113
msgid "Using environment variables"
msgstr "使用环境变量"

#: ../../source/tutorials/00_sim/launch_app.rst:115
msgid ""
"As noted in the help message, the :class:`~app.AppLauncher` arguments "
"(``--livestream``, ``--headless``) have corresponding environment variables "
"(envar) as well. These are detailed in :mod:`omni.isaac.lab.app` "
"documentation. Providing any of these arguments through CLI is equivalent to"
" running the script in a shell environment where the corresponding envar is "
"set."
msgstr ""
"如帮助消息中所述，:class:`~app.AppLauncher`参数（``--livestream``，``--headless``）都有对应的环境变量（envar）。这些详细信息可以在:mod:`omni.isaac.lab.app`文档中找到。通过CLI提供这些参数等同于在设置了相应envar的shell环境中运行脚本。"

#: ../../source/tutorials/00_sim/launch_app.rst:120
msgid ""
"The support for :class:`~app.AppLauncher` envars are simply a convenience to"
" provide session-persistent configurations, and can be set in the user's "
"``${HOME}/.bashrc`` for persistent settings between sessions. In the case "
"where these arguments are provided from the CLI, they will override their "
"corresponding envar, as we will demonstrate later in this tutorial."
msgstr ""
"对于:class:`~app.AppLauncher` "
"envars的支持只是提供了一种方便的方式来提供会话持久性配置，并且可以在用户的``${HOME}/.bashrc``中设置，以便在会话之间保持持久设置。如果这些参数是从CLI中提供的，它们将覆盖其对应的envar，我们将在本教程的后面部分加以说明。"

#: ../../source/tutorials/00_sim/launch_app.rst:125
msgid ""
"These arguments can be used with any script that starts the simulation using"
" :class:`~app.AppLauncher`, with one exception, ``--enable_cameras``. This "
"setting sets the rendering pipeline to use the offscreen renderer. However, "
"this setting is only compatible with the "
":class:`omni.isaac.lab.sim.SimulationContext`. It will not work with Isaac "
"Sim's :class:`omni.isaac.core.simulation_context.SimulationContext` class. "
"For more information on this flag, please see the :class:`~app.AppLauncher` "
"API documentation."
msgstr ""
"这些参数可以与任何启动使用:class:`~app.AppLauncher`的脚本一起使用，只有一个例外情况，即``--enable_cameras``。此设置将设置渲染管线以使用离屏渲染器。但这个设置仅兼容:class:`omni.isaac.lab.sim.SimulationContext`，它不适用于Isaac"
" "
"Sim的:class:`omni.isaac.core.simulation_context.SimulationContext`类。有关此标志的更多信息，请参阅:class:`~app.AppLauncher`"
" API文档。"

#: ../../source/tutorials/00_sim/launch_app.rst:133
msgid "The Code Execution"
msgstr "代码执行"

#: ../../source/tutorials/00_sim/launch_app.rst:135
msgid "We will now run the example script:"
msgstr "现在我们将运行示例脚本："

#: ../../source/tutorials/00_sim/launch_app.rst:141
msgid ""
"This will spawn a 0.5m\\ :sup:`3` volume cuboid in the simulation. No GUI "
"will appear, equivalent to if we had passed the ``--headless`` flag because "
"headlessness is implied by our ``LIVESTREAM`` envar. If a visualization is "
"desired, we could get one via Isaac's `Native Livestreaming`_. Streaming is "
"currently the only supported method of visualization from within the "
"container. The process can be killed by pressing ``Ctrl+C`` in the launching"
" terminal."
msgstr ""
"这将在模拟器中产生一个0.5m\\ "
":sup:`3`体积的长方体。没有GUI会出现，相当于如果我们传递了``--headless``标志，因为通过``LIVESTREAM`` "
"envar隐式地意味着无头模式。如果需要可视化，我们可以通过Isaac的`本机实时流`_获取一个。从容器内部当前只支持流式传输作为可视化的方法。在启动终端中按``Ctrl+C``可终止这个过程。"

#: ../../source/tutorials/00_sim/launch_app.rst:148
msgid ""
"Now, let's look at how :class:`~app.AppLauncher` handles conflicting "
"commands:"
msgstr "现在，让我们看看:class:`~app.AppLauncher`如何处理冲突的命令："

#: ../../source/tutorials/00_sim/launch_app.rst:155
msgid ""
"This will cause the same behavior as in the previous run, because although "
"we have set ``LIVESTREAM=0`` in our envars, CLI args such as "
"``--livestream`` take precedence in determining behavior. The process can be"
" killed by pressing ``Ctrl+C`` in the launching terminal."
msgstr ""
"这将导致与前面的运行相同的行为，因为虽然我们在某些envars中设定了``LIVESTREAM=0``，但是CLI参数如``--livestream``会在决定行为时优先。在启动终端中按``Ctrl+C``可终止这个过程。"

#: ../../source/tutorials/00_sim/launch_app.rst:159
msgid ""
"Finally, we will examine passing arguments to "
":class:`~omni.isaac.kit.SimulationApp` through :class:`~app.AppLauncher`:"
msgstr ""
"最后，我们将研究如何通过:class:`~app.AppLauncher`向:class:`~omni.isaac.kit.SimulationApp`传递参数："

#: ../../source/tutorials/00_sim/launch_app.rst:167
msgid ""
"This will cause the same behavior as before, but now the viewport will be "
"rendered at 1920x1080p resolution. This can be useful when we want to gather"
" high-resolution video, or we can specify a lower resolution if we want our "
"simulation to be more performant. The process can be killed by pressing "
"``Ctrl+C`` in the launching terminal."
msgstr ""
"这将导致与之前相同的行为，但现在视口将以1920x1080p的分辨率呈现。这在我们想要收集高分辨率视频时非常有用，或者我们可以指定更低的分辨率以提高模拟性能。在启动终端中按``Ctrl+C``可终止这个过程。"
