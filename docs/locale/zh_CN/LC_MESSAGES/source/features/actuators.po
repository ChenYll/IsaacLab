# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024, The Isaac Lab Project Developers.
# This file is distributed under the same license as the Isaac Lab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Isaac Lab 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-04 11:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Ziqi Fan <fanziqi614@gmail.com>\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/features/actuators.rst:5
msgid "Actuators"
msgstr "执行器"

#: ../../source/features/actuators.rst:7
msgid ""
"An articulated system comprises of actuated joints, also called the degrees "
"of freedom (DOF). In a physical system, the actuation typically happens "
"either through active components, such as electric or hydraulic motors, or "
"passive components, such as springs. These components can introduce certain "
"non-linear characteristics which includes delays or maximum producible "
"velocity or torque."
msgstr ""
"一个可移动的系统包括执行关节，也称为自由度（DOF）。在实际系统中，传动通常通过主动部件，如电动或液压马达，或通过被动部件，如弹簧来实现。这些部件可能会引入某些非线性特征，包括延迟或最大可产生的速度或扭矩。"

#: ../../source/features/actuators.rst:12
msgid ""
"In simulation, the joints are either position, velocity, or torque-"
"controlled. For position and velocity control, the physics engine internally"
" implements a spring-damp (PD) controller which computes the torques applied"
" on the actuated joints. In torque-control, the commands are set directly as"
" the joint efforts. While this mimics an ideal behavior of the joint "
"mechanism, it does not truly model how the drives work in the physical "
"world. Thus, we provide a mechanism to inject external models to compute the"
" joint commands that would represent the physical robot's behavior."
msgstr ""
"在模拟中，关节可以是位置、速度或扭矩控制的。对于位置和速度控制，物理引擎在内部实现了一个弹簧阻尼（PD）控制器，用于计算作用在执行关节上的扭矩。在扭矩控制中，命令直接设置为关节作用力。虽然这模拟了关节机构的理想行为，但并不真正模拟驱动在物理世界中的工作方式。因此，我们提供了一种机制来注入外部模型，以计算关节命令，以代表物理机器人的行为。"

#: ../../source/features/actuators.rst:20
msgid "Actuator models"
msgstr "执行器模型"

#: ../../source/features/actuators.rst:22
msgid "We name two different types of actuator models:"
msgstr "我们命名了两种不同类型的执行器模型："

#: ../../source/features/actuators.rst:24
msgid ""
"**implicit**: corresponds to the ideal simulation mechanism (provided by "
"physics engine)."
msgstr "**隐式**：对应于理想的模拟机制（由物理引擎提供）。"

#: ../../source/features/actuators.rst:25
msgid ""
"**explicit**: corresponds to external drive models (implemented by user)."
msgstr "**显式**：对应于外部驱动模型（由用户实现）。"

#: ../../source/features/actuators.rst:27
msgid ""
"The explicit actuator model performs two steps: 1) it computes the desired "
"joint torques for tracking the input commands, and 2) it clips the desired "
"torques based on the motor capabilities. The clipped torques are the desired"
" actuation efforts that are set into the simulation."
msgstr ""
"显式执行器模型包括两个步骤：1）计算跟踪输入命令的期望关节扭矩，2）根据电机能力对期望扭矩进行裁剪。裁剪后的扭矩是设置到模拟中的期望作用力。"

#: ../../source/features/actuators.rst:31
msgid ""
"As an example of an ideal explicit actuator model, we provide the "
":class:`omni.isaac.lab.actuators.IdealPDActuator` class, which implements a "
"PD controller with feed-forward effort, and simple clipping based on the "
"configured maximum effort:"
msgstr ""
"作为理想显式执行器模型的一个示例，我们提供了 :class:`omni.isaac.lab.actuators.IdealPDActuator` "
"类，它实现了一个带前馈作用的PD控制器，并根据配置的最大作用力进行简单裁剪："

#: ../../source/features/actuators.rst:35
msgid ""
"\\tau_{j, computed} & = k_p * (q - q_{des}) + k_d * (\\dot{q} - \\dot{q}_{des}) + \\tau_{ff} \\\\\n"
"\\tau_{j, applied} & = clip(\\tau_{computed}, -\\tau_{j, max}, \\tau_{j, max})"
msgstr ""
"τ_{j, computed} = k_p * (q - q_{des}) + k_d * (\\dot{q} - \\dot{q}_{des}) + "
"τ_{ff}"

#: ../../source/features/actuators.rst:41
msgid ""
"where, :math:`k_p` and :math:`k_d` are joint stiffness and damping gains, "
":math:`q` and :math:`\\dot{q}` are the current joint positions and "
"velocities, :math:`q_{des}`, :math:`\\dot{q}_{des}` and :math:`\\tau_{ff}` "
"are the desired joint positions, velocities and torques commands. The "
"parameters :math:`\\gamma` and :math:`\\tau_{motor, max}`  are the gear box "
"ratio and the maximum motor effort possible."
msgstr ""
"其中， :math:`k_p` 和 :math:`k_d` 是关节刚度和阻尼增益， :math:`q` 和 :math:`\\dot{q}` "
"是当前关节位置和速度， :math:`q_{des}`、:math:`\\dot{q}_{des}` 和 :math:`τ_{ff}` "
"是期望的关节位置、速度和扭矩命令。参数 :math:`\\gamma` 和 :math:`τ_{motor, max}` 是变速箱比和电机的最大作用力。"

#: ../../source/features/actuators.rst:47
msgid "Actuator groups"
msgstr "执行器组"

#: ../../source/features/actuators.rst:49
msgid ""
"The actuator models by themselves are computational blocks that take as "
"inputs the desired joint commands and output the joint commands to apply "
"into the simulator. They do not contain any knowledge about the joints they "
"are acting on themselves. These are handled by the "
":class:`omni.isaac.lab.assets.Articulation` class, which wraps around the "
"physics engine's articulation class."
msgstr ""
"执行器模型本身是计算单元，它们的输入是期望的关节命令，输出是应用到模拟器中的关节命令。它们不包含任何关于它们本身所作用的关节的知识。这些由 "
":class:`omni.isaac.lab.assets.Articulation` 类处理，它包装了物理引擎的关节类。"

#: ../../source/features/actuators.rst:54
msgid ""
"Actuator are collected as a set of actuated joints on an articulation that "
"are using the same actuator model. For instance, the quadruped, ANYmal-C, "
"uses series elastic actuator, ANYdrive 3.0, for all its joints. This "
"grouping configures the actuator model for those joints, translates the "
"input commands to the joint level commands, and returns the articulation "
"action to set into the simulator. Having an arm with a different actuator "
"model, such as a DC motor, would require configuring a different actuator "
"group."
msgstr ""
"执行器被视为在关节机构上使用相同执行器模型的多个执行关节的集合。例如，ANYmal-C四足机器人使用串联弹性执行器 ANYdrive 3.0 "
"来作用于其所有关节。这种分组配置了这些关节的执行器模型，将输入命令转换为关节级别的命令，并返回设置到模拟器中的关节动作。具有不同执行器模型的手臂，如直流电机，将需要配置一个不同的执行器组。"

#: ../../source/features/actuators.rst:60
msgid ""
"The following figure shows the actuator groups for a legged mobile "
"manipulator:"
msgstr "下图显示了一个腿式移动操作器的执行器组："

#: ../../source/features/actuators.rst:-1
msgid "Actuator models for a legged mobile manipulator"
msgstr "腿式移动操作器的执行器模型"

#: ../../source/features/actuators.rst:76
msgid ""
"We provide implementations for various explicit actuator models. These are "
"detailed in `omni.isaac.lab.actuators "
"<../api/lab/omni.isaac.lab.actuators.html>`_ sub-package."
msgstr ""
"我们为各种显式执行器模型提供了实现。这些详细信息在 `omni.isaac.lab.actuators "
"<../api/lab/omni.isaac.lab.actuators.html>`_ 子包中。"
